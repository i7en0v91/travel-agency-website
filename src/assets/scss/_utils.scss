@use "sass:map";
$prefix: 'glb';

$breakpoints: (
  'xs': 375px, // subscribe mailbox control determines
  's': 550px,
  'm': 872px,
  'l': 1040px,
  'xl': 1376px
);
$min-page-width: map.get($breakpoints, 'xs');
$max-page-width: 1800px;

$_bkp-small: map.get($breakpoints, 's');
$_bkp-medium: map.get($breakpoints, 'm');
$_bkp-large: map.get($breakpoints, 'l');
$_bkp-extra-large: map.get($breakpoints, 'xl');

@mixin for-extra-large-only() {
  @media only screen and (min-width: #{$_bkp-extra-large}) {
    @content;
  }
}

@mixin for-large-and-extra-large() {
  @media only screen and (min-width: #{$_bkp-large}) {
    @content;
  }
}

@mixin for-medium-and-large() {
  @media only screen and (min-width: #{$_bkp-medium}) {
    @content;
  }
}

@mixin for-small-and-above() {
  @media only screen and (min-width: #{$_bkp-small}) {
    @content;
  }
}

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function escape-svg($string) {
  $escaped-characters: (
    ("<", "%3c"),
    (">", "%3e"),
    ("#", "%23"),
    ("(", "%28"),
    (")", "%29"),
  ) !default;

  @if str-index($string, "data:image/svg+xml") {
    @each $char, $encoded in $escaped-characters {
      // Do not escape the url brackets
      @if str-index($string, "url(") == 1 {
        $string: url("#{str-replace(str-slice($string, 6, -3), $char, $encoded)}");
      } @else {
        $string: str-replace($string, $char, $encoded);
      }
    }
  }

  @return $string;
}

@use 'scss-reset/reset';
@use 'sass:map';
@use "sass:color";
@use "sass:math";
@use 'system' as *;
@use 'buttons' as *;
@use 'themes' as *;
@use 'utils' as *;

$field-frame-y-padding: markup-to-rem(14px);

:root {
  font-size: 14px;
  @include for-small-and-above() {
    font-size: 16px;
  }
}

body {
  margin: 0;
  padding: 0;
  box-sizing: content-box;

  @include with-theme-color('body-bg') using($css-var) {
    background-color: var($css-var);
  }
  @include with-body-font('body-primary');

  --#{$prefix}-page-padding-x: 14px;
  --#{$prefix}-page-padding-y: 27px;
  @include for-small-and-above() {
    --#{$prefix}-page-padding-x: 20px;
  }
  @include for-medium-and-large() {
    --#{$prefix}-page-padding-x: 40px;
  }
  @include for-extra-large-only() {
    --#{$prefix}-page-padding-x: 104px;
    --#{$prefix}-page-padding-y: 27px;
  }

  @for $i from 1 through 5 {
    h#{$i} {
      @include with-header-font(#{$i});
    }

    .font-h#{$i} {
      @include with-header-font(#{$i});
    }
  }
}

.grecaptcha-badge {
  z-index: 10;
}

a {
  text-decoration: none;
  color: inherit;
  background-color: inherit;
  font-family: inherit;
  font-size: inherit;

  &:hover {
    text-decoration: none;
  }
}

.app-container {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  min-height: 100%;
  max-width: 100vw;
  display: flex;
  flex-direction: column;
  min-width: $min-page-width;
  align-items: center;
  @media only screen and (max-width: 300px) {
    align-items: start;
  }

  .app-track {
    min-height: 250px;
    max-width: $max-page-width;
    display: flex;
    flex-direction: column;
    width: 100%;
  }
}

.error-helm {
  width: 100%;
  height: 100%;
  min-width: 100%;
  min-height: 100%;
  border-radius: inherit;
  

  .error-helm-stub {
    width: 100%;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
    border-radius: inherit;
    overflow: hidden;
    @include with-theme-color('error-helm-stub-bg') using($css-var) {
      background-color: var($css-var);
    }
  
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    gap: 8px;
    justify-content: center;
    align-items: center;
  
    .error-helm-stub-icon {
      flex: 1 1 auto;
      width: 100%;
      height: 100%;
      max-width: 64px;
      max-height: 64px;
      background-image: url('~/public/img/error-helm-stub.svg?raw&inline');
      background-repeat: no-repeat;
      background-position: center;
  
      @include with-theme-color('nerror-helm-stub-bg') using($css-var) {
        background-color: var($css-var);
      }
    }
  
    .error-helm-stub-text {
      @include with-theme-color('error-helm-stub') using($css-var) {
        color: var($css-var);
      }
    }
  }  
}

.error-box {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  margin-top: 100px;
  margin-left: 30px;
  margin-right: 30px;

  width: fit-content;

  @include for-medium-and-large() {
    flex-direction: row;
    margin-left: auto;
    margin-right: auto;
  }

  .error-box-code {
    @include with-theme-color('secondary') using($css-var) {
      color: var($css-var);
    }
  }

  .error-box-details {
    @include with-theme-color('primary') using($css-var) {
      color: var($css-var);
    }

    .error-box-msg {
      @include for-medium-and-large() {
        @include with-theme-color('control-frame') using($css-var) {
          border-left: 1px solid var($css-var);
        }
      }  
    }

    .error-box-homelink {
      display: inline-block;
      white-space: nowrap;
      text-decoration: none;
    }
  }
}  

.field-frame {
  display: flex;
  flex-direction: row;

  @include with-theme-color('control-frame') using($css-var) {
    border: 1px solid var($css-var);
  }

  padding: $field-frame-y-padding 16px $field-frame-y-padding 16px;

  .field-frame-label {
    display: block;
    position: absolute;
    transform:  translateX(-4px) translateY(calc(-50% - $field-frame-y-padding));
    white-space: nowrap;
    

    @include with-body-font('body-secondary');
    @include with-theme-color('primary') using($css-var) {
      color: var($css-var);
    }
    @include with-theme-color('body-bg') using($css-var) {
      background-color: var($css-var);
      width: min-content;
    }
  }
}

.text-data-loading {
  --#{$prefix}-col-data-loading-bg: var(--#{$prefix}-col-text-data-loading-stub);
  --#{$prefix}-col-data-loading-indicator: var(--#{$prefix}-col-text-data-loading-indicator);
  width: 45%;
  border-radius: map.get($borders-radius, '2');
}

.data-loading-stub {
  background: linear-gradient(75deg, 
      var(--#{$prefix}-col-data-loading-bg) 0%, 
      var(--#{$prefix}-col-data-loading-bg) 23%,
      var(--#{$prefix}-col-data-loading-indicator) 33%, 
      var(--#{$prefix}-col-data-loading-bg) 43%,
      var(--#{$prefix}-col-data-loading-bg) 100%); 
    background-size: 500%;
    animation: data-loading-stub $transition-default-interval linear infinite;
}

@keyframes data-loading-stub {
  0% { 
    background-position: 200% 0;
  }

  100% { 
    background-position: 100% 0;
  }
}

.search-list-input {
  /* align vertically for search offers */
  margin-bottom: 1px;

  .search-list-input-el {
    width: 100%;
    border: none;  

    background-color: inherit;
    @include with-theme-color('input-ctrl-primary') using ($css-var) {
      color: var(#{$css-var});
    }
  }
}

.search-list-input-item {  
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: map.get($breakpoints, 's') - 125px;
  white-space: nowrap;

  cursor: pointer;

  &:not(:first-child) {
    margin-top: map.get($spacings, '1');
  }

  &:focus-visible {
    @include with-outline(1px);
  }
  
  &:hover {
    @include with-theme-color('select-ctrl-highlight-bg') using ($css-var) {
      background-color: var($css-var);
    }
  }
}

.dropdown-list {
  .v-popper {
    height: 100%;
  }

  .dropdown-list-btn {
    width: 100%;
    height: 100%;
    display: block;
    align-self: center;
    text-align: left;
    
    @include with-theme-color('input-ctrl-primary') using ($css-var) {
      color: var(#{$css-var});
    }

    &:focus-visible {
      @include with-outline();
    }

    &::after {
      width: markup-to-rem(13px);
      height: markup-to-rem(13px);
      
      content: '';
      float: right;
      vertical-align: inherit;
      

      -webkit-mask-image: url('~/public/img/icon-dropdown-toggler.svg?raw&inline');
      mask-image: url('~/public/img/icon-dropdown-toggler.svg?raw&inline');
      
      -webkit-mask-size: contain;
      mask-size: contain;
      -webkit-mask-repeat: no-repeat;
      mask-repeat: no-repeat;
      -webkit-mask-position: center center;
      mask-position: center center;

      @include with-theme-color('input-ctrl-primary') using ($css-var) {
        background-color: var($css-var);
      }
    }
  }

  .dropdown-list-field-frame {
    height: 100%;
  }

  .dropdown-list-item {
    cursor: pointer;
    &:focus-visible {
      @include with-outline(1px);
    }
  }
}

.calendar {
  font-family: $font-default;

  &.vc-golobe {
    @include with-theme-color('body-bg') using ($css-var) {
      background-color: var(#{$css-var});
    }

    --vc-text-2xs: markup-to-rem(10px);
    --vc-text-xs: markup-to-rem(12px);
    --vc-text-sm: markup-to-rem(14px);
    --vc-text-base: markup-to-rem(16px);
    --vc-text-lg: markup-to-rem(18px);
    --vc-text-xl: markup-to-rem(20px);
    --vc-text-2xl: markup-to-rem(24px);
  }

  @include with-dark-theme() {
    // revert colors for dark theme
    &.vc-container {  
      --vc-black: #ffffff;
      --vc-white: #000000;
      --vc-gray-900: #f8fafc;
      --vc-gray-800: #f1f5f9;
      --vc-gray-700: #e2e8f0;
      --vc-gray-600: #cbd5e1;
      --vc-gray-500: #94a3b8;
      --vc-gray-400: #64748b;
      --vc-gray-300: #475569;
      --vc-gray-200: #334155;
      --vc-gray-100: #1e293b;
      --vc-gray-50: #0f172a;  
    }
  }

  @include with-light-theme() {
    .vc-golobe {
      @each $l in $calendar-accent-levels {
        $percentage: math.round(math.div($l - 50, 8.5));
        $interpolated-color: color.mix(color.adjust($ambient-base-light, $lightness: 30%), #eff6ff, $weight: $percentage * 1%);
        --vc-accent-#{$l}: #{$interpolated-color};
      }
    }
  }

  @include with-dark-theme() {
    .vc-golobe {
      @each $l in $calendar-accent-levels {
        $percentage: math.round(math.div($l - 50, 8.5));
        $interpolated-color: color.mix(color.adjust($ambient-base-dark, $lightness: -30%), #141516, $weight: $percentage * 1%);
        --vc-accent-#{$l}: #{$interpolated-color};
      }
    }
  }
}

.input-field {
  border: none;
  width: 100%;
  background-color: inherit;

  @include with-theme-color('input-ctrl-primary') using ($css-var) {
    color: var(#{$css-var});
  }

  &:-webkit-autofill {
    -webkit-box-shadow: none;
    &:hover, &:active, &:focus {
      -webkit-box-shadow: none;
    }
  }
}

.form-field {
  & + .input-errors {
    padding-top: 10px;
  }
}

.form-error-msg { 
  color: red;
  // workaround for Chromium bug
  // https://stackoverflow.com/questions/74836417/font-rendering-in-chrome-is-affected-by-focusing-unrelated-input-element
  backface-visibility: hidden; 
  @include with-body-font('body-secondary');
}

.modal-window {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: center;
  min-width: map.get($breakpoints, 'xs');

  .vfm__content {
    @include with-theme-color('body-bg')  using ($css-var) {
      background-color: var($css-var);
    }

    border-radius: map.get($borders-radius, '2');
    @include for-small-and-above() {
      border-radius: map.get($borders-radius, '4'); 
    }
  }
}

.modal-waiting-indicator {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  min-width: map.get($breakpoints, 'xs');

  .modal-waiting-indicator-content {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: 12px;
    padding-left: 10%;
    padding-right: 10%;
    flex-wrap: wrap;

    .waiting-indicator-image {
      width: 36px;
      height: 36px;
      @include for-small-and-above() {
        width: 60px;
        height: 60px;
      }
    }
  
    .waiting-indicator-label {
      white-space: nowrap;
      color: white;
    }
  }  
}

.component-waiting-indicator {
  width: 100%;
  background-color: transparent;

  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  
  .waiting-indicator-image {
    width: 60px;
    height: 60px;
  }
}

.confirm-box {
  height: auto;
  max-width: 75vw;

  .confirm-box-msg {
    width: 100%;
    height: auto;
    max-height: min-content;
    white-space: normal;
    text-overflow: ellipsis;
    overflow: hidden;
    text-align: center;

    @include with-body-font('body-primary');

    @include with-theme-color('primary') using ($css-var) {
      color: var(#{$css-var});
    }
  }

  .confirm-box-buttons {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: center;
    gap: 8px;
  }
}

.cookie-banner {
  width: 100%;
  max-width: 100vw;
  height: auto;
  position: fixed;
  bottom: 0;
  z-index: 100;

  display: flex;
  flex-direction: column;
  align-items: center;
  gap: map.get($spacings, '3');

  @include with-theme-color('subscribe-box-bg') using($css-var) {
    background-color: var($css-var);
  }

  font-size: 0.8rem;
  @include for-small-and-above() {
    flex-direction: row;
    gap: map.get($spacings, '4');
    align-items: flex-end;

    font-size: 1rem;
  }

  .cookie-banner-text {
    @include with-theme-color('primary') using($css-var) {
      color: var($css-var);
    }
    
    flex: 4 1  auto;
    width: 100%;
    text-align: center;
    @include for-small-and-above() {
      text-align: left;
    }

    .cookie-banner-title {
      word-break: break-all;
      font-size: 2.0rem;
    }

    .cookie-banner-privacy-link {
      font-weight: bold;
      text-decoration: underline;

      &:focus-visible {
        @include with-outline();
      }
    }
  }

  .cookie-banner-accept-btn {
    flex: 1 4 auto;
    width: 100%;
    min-width: 130px;
  }
}

.drafts-waiting-indicator-div {
  width: 100vw;
  height: 100vh;
  display: block;

  .drafts-waiting-indicator {
    display: block;
    position: absolute;
    width: auto;
    height: auto;
    left: 50vw;
    top: 50vh;
    transform: translateX(-50%) translateY(-50%);
  }
}

/* custom scrollbar theme */
.ps {
  .ps__rail-y, .ps__rail-x {
    background-color: transparent!important;
  
    .ps__thumb-y, .ps__thumb-x {
      @include with-theme-color('control-bg') using($css-var) {
        background-color: var($css-var);
      }  
    }
    
    &:hover, &.ps--clicking {
      .ps__thumb-y, .ps__thumb-x {
        @include with-theme-color('control-bg') using($css-var) {
          background-color: var($css-var);
        }
      }
    }
  }  
}

.collapsable-section {
  display: contents;
  width: 100%;
  float: right;

  .collapsable-section-head {
    display: inline-block;
    width: fit-content;
  }

  .collapsable-section-content {
    display: block;
    width: 100%;

    overflow-y: clip;
  }

  .collapsable-section-btn {
    width: min-content;
    white-space: nowrap;
    float: right;

    &:focus-visible {
      @include with-outline();
    }

    &:not(.disabled):hover {
      filter: brightness($active-highlight-percent);
      @include with-theme-color('select-ctrl-highlight-bg') using ($css-var) {
        background-color: var($css-var);
      }
    }

    &::before {
      width: markup-to-rem(20px);
      height: markup-to-rem(10px);
      display: inline-block;
      content: '';
      transform: rotate(-90deg);

      -webkit-mask-image: url('~/public/img/icon-right-chevron.svg?raw&inline');
      mask-image: url('~/public/img/icon-right-chevron.svg?raw&inline');
      
      -webkit-mask-size: contain;
      mask-size: contain;
      -webkit-mask-repeat: no-repeat;
      mask-repeat: no-repeat;
      -webkit-mask-position: center center;
      mask-position: center center;
      vertical-align: middle;

      @include with-theme-color('input-ctrl-primary') using ($css-var) {
        background-color: var($css-var);
      }
    }

    &.collapsed::before {
      transform: rotate(90deg) translateX(1px);
    }
  }
}
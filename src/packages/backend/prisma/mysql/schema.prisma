generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model HtmlPageTimestamp {
  id                  String                @id
  timestamp           DateTime              
  version             Int                   

  @@index([timestamp])
}

model User {
  id                  String                @id
  firstName           String?               @db.VarChar(128)
  lastName            String?               @db.VarChar(128)
  passwordSalt        String?               @db.VarChar(256)
  passwordHash        String?               @db.VarChar(256)
  authProvider        String
  providerIdentity    String                @db.VarChar(256)
  avatarId            String?               @unique
  coverId             String?               @unique

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  emails              UserEmail[]           @relation(name: "UserOnEmail")
  ownedImages         Image[]               @relation(name: "ImageOwner")
  avatar              Image?                @relation(name: "AvatarOnUser", fields: [avatarId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  cover               Image?                @relation(name: "CoverOnUser", fields: [coverId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  flightOffers        UserFlightOffer[]     @relation(name: "UserOnUserFlightOffer")
  stayOffers          UserStayOffer[]       @relation(name: "UserOnUserStayOffer")
  hotelReviews        HotelReview[]         @relation(name: "UserOnHotelReview")
  bookings            Booking[]             @relation(name: "UserOnBooking")
  verificationTokens  VerificationToken[]   @relation(name: "UserOnVerificationToken")

  @@index([authProvider, providerIdentity])
  @@index([modifiedUtc])
}

model UserEmail {
  id                  String                @id
  email               String                @db.VarChar(256)
  isVerified          Boolean               @default(false)
  verificationTokenId String?               @unique
  changedEmailId      String?
  orderNum            Int             
  userId              String  

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  user                User                  @relation(name: "UserOnEmail", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  verificationToken   VerificationToken?    @relation(name: "VerificationTokenOnEmail", fields: [verificationTokenId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  changedEmail        UserEmail?            @relation(name: "ChangedEmailOnEmail", fields: [changedEmailId], references: [id], onDelete: SetNull, onUpdate: SetNull)
  newEmails           UserEmail[]           @relation(name: "ChangedEmailOnEmail")

  @@index([email])
  @@index([userId])
  @@index([verificationTokenId])
  @@index([modifiedUtc])
}

model Image {
  id                  String                @id
  slug                String                @db.VarChar(256) @unique
  categoryId          String    
  fileId              String                
  stubCssStyle        String?               @db.Text
  invertForDarkTheme  Boolean               @default(false)
  ownerId             String?               

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  category            ImageCategory         @relation(name: "CategoryOnImage", fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Cascade)     
  userOfAvatar        User?                 @relation(name: "AvatarOnUser")
  userOfCover         User?                 @relation(name: "CoverOnUser")
  popularCity         PopularCityImage?     @relation(name: "ImageOnPopularCity")
  hotel               HotelImage?           @relation(name: "ImageOnHotel")
  companyReview       CompanyReview?        @relation(name: "ImageOnCompanyReview")
  logoOfCompany       AirlineCompany?       @relation(name: "ImageOnAirlineCompany")
  airplaneImage       AirplaneImage?        @relation(name: "ImageOnAirplaneImage")
  authFormImage       AuthFormImage?        @relation(name: "ImageOnAuthForm")
  owner               User?                 @relation(name: "ImageOwner", fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([slug])
  @@index([categoryId])
  @@index([fileId])
  @@index([ownerId])
  @@index([modifiedUtc])
}

model AcsysDraftsImage {
  id                  String                @id
  slug                String                @db.VarChar(256) @unique
  categoryId          String    
  fileId              String                
  stubCssStyle        String?               @db.Text
  invertForDarkTheme  Boolean               
  ownerId             String?               

  createdUtc          DateTime              @default(now())  
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  @@index([slug])
  @@index([categoryId])
  @@index([modifiedUtc])
}

model ImageCategory {
  id                  String                @id
  kind                String                @unique
  width               Int
  height              Int

  createdUtc          DateTime              @default(now())  
  modifiedUtc         DateTime              @default(now())
  version             Int                   

  images              Image[]               @relation(name: "CategoryOnImage")     

  @@index([kind])
  @@index([modifiedUtc])
}

model File {
  id                  String                @id
  mime                String                @db.VarChar(256)
  originalName        String?               @db.VarChar(512)
  bytes               Bytes

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  @@index([modifiedUtc])
}

model AuthFormImage {
  id                  String                @id
  imageId             String                @unique
  orderNum            Int

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  image               Image                 @relation(name: "ImageOnAuthForm", fields: [imageId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  
  @@index([modifiedUtc])
}

model AcsysDraftsAuthFormImage {
  id                  String                @id
  imageId             String                @unique
  orderNum            Int

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   
  
  @@index([modifiedUtc])
}

model Flight {
  id                  String                @id
  airlineCompanyId    String
  airplaneId          String
  departmentAirportId String
  arrivalAirportId    String
  departmentUtcPosix  Int                   // POSIX seconds timestamp                   
  arrivalUtcPosix     Int                   // POSIX seconds timestamp
  dataHash            String                @db.VarChar(256)

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  airlineCompany      AirlineCompany        @relation(name: "AirlineCompanyOnFlight", fields: [airlineCompanyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  airplane            Airplane              @relation(name: "AirplaneOnFlight", fields: [airplaneId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  departmentAirport   Airport               @relation(name: "DepartmentAirportOnFlight", fields: [departmentAirportId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  arrivalAirport      Airport               @relation(name: "ArrivalAirportOnFlight", fields: [arrivalAirportId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  departOffers        FlightOffer[]         @relation(name: "DepartFlightOnOffer")
  returnOffers        FlightOffer[]         @relation(name: "ReturnFlightOnOffer")

  @@index([airlineCompanyId])
  @@index([airplaneId])
  @@index([departmentAirportId])
  @@index([arrivalAirportId])
  @@index([dataHash])
  @@index([modifiedUtc])
}

model AcsysDraftsFlight {
  id                  String                @id
  airlineCompanyId    String
  airplaneId          String
  departmentAirportId String
  arrivalAirportId    String
  departmentUtcPosix  Int                   // POSIX seconds timestamp                   
  arrivalUtcPosix     Int                   // POSIX seconds timestamp
  dataHash            String                @db.VarChar(256)

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  @@index([airlineCompanyId])
  @@index([airplaneId])
  @@index([departmentAirportId])
  @@index([arrivalAirportId])
  @@index([dataHash])
  @@index([modifiedUtc])
}

model FlightOffer {
  id                  String                @id
  departFlightId      String    
  returnFlightId      String?    
  numPassengers       Int
  totalPrice          Int
  class               String
  dataHash            String                @db.VarChar(256)

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  departFlight        Flight                @relation(name: "DepartFlightOnOffer", fields: [departFlightId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  returnFlight        Flight?               @relation(name: "ReturnFlightOnOffer", fields: [returnFlightId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  offerUsers          UserFlightOffer[]     @relation(name: "OfferOnUserFlightOffer")

  @@index([dataHash])
  @@index([departFlightId])
  @@index([returnFlightId])
  @@index([modifiedUtc])
}

model AcsysDraftsFlightOffer {
  id                  String                @id
  departFlightId      String    
  returnFlightId      String?    
  numPassengers       Int
  totalPrice          Int
  class               String
  dataHash            String                @db.VarChar(256)

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  @@index([dataHash])
  @@index([departFlightId])
  @@index([returnFlightId])
  @@index([modifiedUtc])
}

model StayOffer {
  id                  String                @id
  hotelId             String                   
  checkInPosix        Int                   // POSIX seconds timestamp
  checkOutPosix       Int                   // POSIX seconds timestamp
  numRooms            Int
  numGuests           Int
  totalPrice          Int
  dataHash            String                @db.VarChar(256)

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  hotel               Hotel                 @relation(name: "OffersOnHotel", fields: [hotelId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  offerUsers          UserStayOffer[]       @relation(name: "OfferOnUserStayOffer")

  @@index([hotelId])
  @@index([dataHash])
  @@index([modifiedUtc])
}

model AcsysDraftsStayOffer {
  id                  String                @id
  hotelId             String                   
  checkInPosix        Int                   // POSIX seconds timestamp
  checkOutPosix       Int                   // POSIX seconds timestamp
  numRooms            Int
  numGuests           Int
  totalPrice          Int
  dataHash            String                @db.VarChar(256)

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  @@index([hotelId])
  @@index([dataHash])
  @@index([modifiedUtc])
}

model UserFlightOffer {
  id                  String                @id
  offerId             String
  userId              String
  isFavourite         Boolean               @default(false)

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  user                User                  @relation(name: "UserOnUserFlightOffer", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  offer               FlightOffer           @relation(name: "OfferOnUserFlightOffer", fields: [offerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  booking             Booking?              @relation(name: "BookingOnUserFlightOffer")

  @@index([userId, offerId])
  @@index([modifiedUtc])
}

model UserStayOffer {
  id                  String                @id
  offerId             String
  userId              String
  isFavourite         Boolean               @default(false)

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  user                User                  @relation(name: "UserOnUserStayOffer", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  offer               StayOffer             @relation(name: "OfferOnUserStayOffer", fields: [offerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  booking             Booking?              @relation(name: "BookingOnUserStayOffer")

  @@index([userId, offerId])
  @@index([modifiedUtc])
}

model Hotel {
  id                  String                @id
  cityId              String                   
  slug                String                @db.VarChar(256) @unique  
  nameStrId           String                @unique
  lon                 String                //@db.Decimal(7,4)
  lat                 String                //@db.Decimal(7,4)

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  city                City                  @relation(name: "CityOnHotel", fields: [cityId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  nameStr             LocalizeableValue     @relation(name: "NameOnHotel", fields: [nameStrId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  offers              StayOffer[]           @relation(name: "OffersOnHotel")

  description         HotelDescription[]    @relation(name: "HotelOnHotelDescription")
  reviews             HotelReview[]         @relation(name: "HotelOnHotelReview")
  images              HotelImage[]          @relation(name: "HotelOnHotelImage")

  @@index([cityId])
  @@index([modifiedUtc])
}

model AcsysDraftsHotel {
  id                  String                @id
  cityId              String                   
  slug                String                @db.VarChar(256) @unique  
  nameStrId           String                @unique
  lon                 String                //@db.Decimal(7,4)
  lat                 String                //@db.Decimal(7,4)

  createdUtc          DateTime              @default(now())                
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  @@index([cityId])
  @@index([modifiedUtc])
}

model HotelDescription {
  id                  String                @id
  hotelId             String       
  textStrId           String                @unique
  paragraphKind       String
  orderNum            Int

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  hotel               Hotel                 @relation(name: "HotelOnHotelDescription", fields: [hotelId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  textStr             LocalizeableValue     @relation(name: "TextOnHotelHotelDescription", fields: [textStrId], references: [id], onDelete: Cascade, onUpdate: Cascade)            

  @@index([hotelId]) 
  @@index([modifiedUtc])
}

model AcsysDraftsHotelDescription {
  id                  String                @id
  hotelId             String       
  textStrId           String                @unique
  paragraphKind       String
  orderNum            Int

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  @@index([hotelId]) 
  @@index([modifiedUtc])
}

model HotelReview {
  id                  String                @id
  hotelId             String                   
  userId              String                   
  textStrId           String                @unique
  score               Int
  
  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  hotel               Hotel                 @relation(name: "HotelOnHotelReview", fields: [hotelId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  textStr             LocalizeableValue     @relation(name: "TextOnHotelReview", fields: [textStrId], references: [id], onDelete: Restrict, onUpdate: Cascade)            
  user                User                  @relation(name: "UserOnHotelReview", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)            

  @@index([modifiedUtc])
}

model AcsysDraftsHotelReview {
  id                  String                @id
  hotelId             String                   
  userId              String                   
  textStrId           String                @unique
  score               Int
  
  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  @@index([modifiedUtc])
}

model HotelImage {
  id                  String                @id
  hotelId             String                   
  imageId             String                @unique
  serviceLevel        String?
  orderNum            Int

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  image               Image                 @relation(name: "ImageOnHotel", fields: [imageId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  hotel               Hotel                 @relation(name: "HotelOnHotelImage", fields: [hotelId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([hotelId])
  @@index([modifiedUtc])
}

model AcsysDraftsHotelImage {
  id                  String                @id
  hotelId             String                   
  imageId             String                @unique
  serviceLevel        String?
  orderNum            Int

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  @@index([hotelId])
  @@index([modifiedUtc])
}

model Booking {
  id                  String                @id
  flightOfferId       String?               @unique
  stayOfferId         String?               @unique
  serviceLevel        String?
  userId              String

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  user                User                  @relation(name: "UserOnBooking", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  flightOffer         UserFlightOffer?      @relation(name: "BookingOnUserFlightOffer", fields: [flightOfferId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  stayOffer           UserStayOffer?        @relation(name: "BookingOnUserStayOffer", fields: [stayOfferId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([userId])
  @@index([modifiedUtc])
}

model PopularCity {
  id                  String                @id
  cityId              String                @unique
  promoLineStrId      String                @unique
  travelHeaderStrId   String                @unique
  travelTextStrId     String                @unique
  rating              Int
  visibleOnWorldMap   Boolean               @default(false)

  createdUtc          DateTime              @default(now())  
  modifiedUtc         DateTime              @default(now())
  version             Int                   

  promoLineStr        LocalizeableValue     @relation(name: "PromoLineOnPopularCity", fields: [promoLineStrId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  travelHeaderStr     LocalizeableValue     @relation(name: "TravelHeaderOnPopularCity", fields: [travelHeaderStrId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  travelTextStr       LocalizeableValue     @relation(name: "TravelTextOnPopularCity", fields: [travelTextStrId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  city                City                  @relation(name: "CityOnPopularCity", fields: [cityId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  images              PopularCityImage[]    @relation(name: "CityOnCityImage")

  @@index([cityId])
  @@index([modifiedUtc])
}

model AcsysDraftsPopularCity {
  id                  String                @id
  cityId              String                @unique
  promoLineStrId      String                @unique
  travelHeaderStrId   String                @unique
  travelTextStrId     String                @unique
  rating              Int
  visibleOnWorldMap   Boolean               

  createdUtc          DateTime              @default(now())  
  modifiedUtc         DateTime              @default(now())
  version             Int                   

  @@index([cityId])
  @@index([modifiedUtc])
}

model PopularCityImage {
  id                  String                @id
  popularCityId       String    
  imageId             String                @unique
  orderNum            Int

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  image               Image                 @relation(name: "ImageOnPopularCity", fields: [imageId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  popularCity         PopularCity           @relation(name: "CityOnCityImage", fields: [popularCityId], references: [id])

  @@index([popularCityId])
  @@index([modifiedUtc])
}

model AcsysDraftsPopularCityImage {
  id                  String                @id
  popularCityId       String    
  imageId             String                @unique
  orderNum            Int

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   
  
  @@index([popularCityId])
  @@index([modifiedUtc])
}

model Country {
  id                  String                @id
  nameStrId           String                @unique

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  nameStr             LocalizeableValue     @relation(name: "NameOnCountry", fields: [nameStrId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  cities              City[]                @relation(name: "CountryOnCity")     

  @@index([nameStrId])
  @@index([modifiedUtc])
}

model City {
  id                  String                @id
  slug                String                @db.VarChar(256) @unique
  nameStrId           String                @unique
  textForSearch       String                @db.Text
  lon                 String                //@db.Decimal(7,4)
  lat                 String                //@db.Decimal(7,4)
  countryId           String
  population          Int
  utcOffsetMin        Int

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  nameStr             LocalizeableValue     @relation(name: "NameOnCity", fields: [nameStrId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  country             Country               @relation(name: "CountryOnCity", fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  popularCity         PopularCity?          @relation(name: "CityOnPopularCity")
  airports            Airport[]             @relation(name: "CityOnAirport")
  airlineCompany      AirlineCompany?       @relation(name: "CityOnAirlineCompany")
  hotels              Hotel[]               @relation(name: "CityOnHotel")

  @@index([countryId])
  @@index([nameStrId])
  @@index([slug])
  @@index([modifiedUtc])
}

model AcsysDraftsCity {
  id                  String                @id
  slug                String                @db.VarChar(256) @unique
  nameStrId           String                @unique
  textForSearch       String                @db.Text
  lon                 String                //@db.Decimal(7,4)
  lat                 String                //@db.Decimal(7,4)
  countryId           String
  population          Int
  utcOffsetMin        Int

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   
  
  @@index([countryId])
  @@index([slug])
  @@index([modifiedUtc])
}

model Airport {
  id                  String                @id
  lon                 String                //@db.Decimal(7,4)
  lat                 String                //@db.Decimal(7,4)
  cityId              String    
  nameStrId           String                @unique               

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  city                City                  @relation(name: "CityOnAirport", fields: [cityId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  departmentFlights   Flight[]              @relation(name: "DepartmentAirportOnFlight")
  arrivalFlights      Flight[]              @relation(name: "ArrivalAirportOnFlight")
  nameStr             LocalizeableValue     @relation(name: "NameOnAirport", fields: [nameStrId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  @@index([cityId])
  @@index([nameStrId])
  @@index([modifiedUtc])
}

model AcsysDraftsAirport {
  id                  String                @id
  lon                 String                //@db.Decimal(7,4)
  lat                 String                //@db.Decimal(7,4)
  cityId              String    
  nameStrId           String                @unique               

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  @@index([cityId])
  @@index([modifiedUtc])
}

model CompanyReview {
  id                  String                @id

  headerStrId         String                @unique
  bodyStrId           String                @unique
  personNameStrId     String                @unique
  imageId             String                @unique

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  headerStr           LocalizeableValue     @relation(name: "HeaderOnCompanyReview", fields: [headerStrId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  bodyStr             LocalizeableValue     @relation(name: "BodyOnCompanyReview", fields: [bodyStrId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  personNameStr       LocalizeableValue     @relation(name: "PersonNameOnCompanyReview", fields: [personNameStrId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  image               Image                 @relation(name: "ImageOnCompanyReview", fields: [imageId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  @@index([modifiedUtc])
}

model AcsysDraftsCompanyReview {
  id                  String                @id

  headerStrId         String                @unique
  bodyStrId           String                @unique
  personNameStrId     String                @unique
  imageId             String                @unique

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  @@index([modifiedUtc])
}

model AirlineCompany {
  id                  String                @id
  nameStrId           String                @unique
  cityId              String                @unique
  logoImageId         String                @unique
  numReviews          Int
  reviewScore         String                // Decimal

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  nameStr             LocalizeableValue     @relation(name: "NameOnAirlineCompany", fields: [nameStrId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  city                City                  @relation(name: "CityOnAirlineCompany", fields: [cityId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  logoImage           Image                 @relation(name: "ImageOnAirlineCompany", fields: [logoImageId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  flights             Flight[]              @relation(name: "AirlineCompanyOnFlight")

  @@index([cityId])
  @@index([modifiedUtc])
}

model AcsysDraftsAirlineCompany {
  id                  String                @id
  nameStrId           String                @unique
  cityId              String                @unique
  logoImageId         String                @unique
  numReviews          Int
  reviewScore         String                // Decimal

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  @@index([cityId])
  @@index([modifiedUtc])
}

model Airplane {
  id                  String                @id
  nameStrId           String                @unique
  
  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  nameStr             LocalizeableValue     @relation(name: "NameOnAirplane", fields: [nameStrId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  images              AirplaneImage[]       @relation(name: "ImageOnAirplane")
  flights             Flight[]              @relation(name: "AirplaneOnFlight")

  @@index([modifiedUtc])
}

model AcsysDraftsAirplane {
  id                  String                @id
  nameStrId           String                @unique
  
  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  @@index([modifiedUtc])
}

model AirplaneImage {
  id                  String                @id
  airplaneId          String    
  imageId             String                @unique
  kind                String
  orderNum            Int

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  airplane            Airplane              @relation(name: "ImageOnAirplane", fields: [airplaneId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  image               Image                 @relation(name: "ImageOnAirplaneImage", fields: [imageId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  
  @@index([airplaneId])
  @@index([modifiedUtc])
}

model AcsysDraftsAirplaneImage {
  id                  String                @id
  airplaneId          String    
  imageId             String                @unique
  kind                String
  orderNum            Int

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   
  
  @@index([airplaneId])
  @@index([modifiedUtc])
}

model MailTemplate {
  id                  String                @id
  kind                String              
  templateStrId       String                @unique

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  templateStr         LocalizeableValue     @relation(name: "TemplateOnMail", fields: [templateStrId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  @@index([modifiedUtc])
}

model AcsysDraftsMailTemplate {
  id                  String                @id
  kind                String              
  templateStrId       String                @unique

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  @@index([modifiedUtc])
}

model VerificationToken {
  id                  String                @id
  userId              String?
  hash                String                @db.VarChar(256)
  attemptsMade        Int                   @default(0)
  kind                String

  createdUtc          DateTime              @default(now())
  modifiedUtc         DateTime              @default(now())
  isDeleted           Boolean               @default(false)
  version             Int                   

  user                User?                 @relation(name: "UserOnVerificationToken", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  email               UserEmail?            @relation(name: "VerificationTokenOnEmail")

  @@index([userId, createdUtc])
  @@index([modifiedUtc])
}

model LocalizeableValue {
  id                      String                @id
  en                      String                @db.Text
  ru                      String                @db.Text
  fr                      String                @db.Text
  createdUtc              DateTime              @default(now())
  modifiedUtc             DateTime              @default(now())
  isDeleted               Boolean               @default(false)
  version                 Int

  city                    City?                 @relation(name: "NameOnCity")
  country                 Country?              @relation(name: "NameOnCountry")
  hotel                   Hotel?                @relation(name: "NameOnHotel")
  cityOfPromoLine         PopularCity?          @relation(name: "PromoLineOnPopularCity")
  cityOfTravelHeader      PopularCity?          @relation(name: "TravelHeaderOnPopularCity")
  cityOfTravelText        PopularCity?          @relation(name: "TravelTextOnPopularCity")
  hotelOfDescription      HotelDescription?     @relation(name: "TextOnHotelHotelDescription")
  hotelReview             HotelReview?          @relation(name: "TextOnHotelReview")
  headerOfCompanyReview   CompanyReview?        @relation(name: "HeaderOnCompanyReview")
  bodyOfCompanyReview     CompanyReview?        @relation(name: "BodyOnCompanyReview")
  personOfCompanyReview   CompanyReview?        @relation(name: "PersonNameOnCompanyReview")
  airlineCompany          AirlineCompany?       @relation(name: "NameOnAirlineCompany")
  airplane                Airplane?             @relation(name: "NameOnAirplane")
  mailTemplate            MailTemplate?         @relation(name: "TemplateOnMail")
  airport                 Airport?              @relation(name: "NameOnAirport")

  @@index([modifiedUtc])
}

model AcsysDraftsLocalizeableValue {
  id                      String                @id
  en                      String                @db.Text
  ru                      String                @db.Text
  fr                      String                @db.Text

  createdUtc              DateTime              @default(now())
  modifiedUtc             DateTime              @default(now())
  isDeleted               Boolean               @default(false)
  version                 Int                   

  @@index([modifiedUtc])
}